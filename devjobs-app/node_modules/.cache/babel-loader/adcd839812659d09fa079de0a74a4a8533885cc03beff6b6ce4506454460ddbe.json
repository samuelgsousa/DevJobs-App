{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madru\\\\OneDrive\\\\Documentos\\\\DevJobs App\\\\devjobs-app\\\\src\\\\containers\\\\Home\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport VagasIndiv from './VagasIndiv';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  useEffect(() => {\n    const fetchVagas = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/');\n        console.log(response.data);\n        const vagas = response.data;\n        console.log(\"Segue o array chefe: \" + vagas);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: vagas.map((vaga, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://via.placeholder.com/50\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 30\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: format(new Date(vaga.data_pub), 'dd-MM-yyyy')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: vaga.cargo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: vaga.localidade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this))\n        }, void 0, false);\n      } catch (error) {\n        console.error('Erro ao buscar vagas:', error);\n      }\n    };\n    fetchVagas();\n  }, []);\n};\n_s(Jobs, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","axios","VagasIndiv","format","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","fetchVagas","response","get","console","log","data","vagas","children","map","vaga","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Date","data_pub","cargo","localidade","error","_c","$RefreshReg$"],"sources":["C:/Users/madru/OneDrive/Documentos/DevJobs App/devjobs-app/src/containers/Home/Jobs.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport VagasIndiv from './VagasIndiv'\r\nimport { format } from 'date-fns'\r\nconst Jobs = () => {\r\n\r\n\r\nuseEffect(() => {\r\n    const fetchVagas = async () =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:3000/')\r\n            console.log(response.data)\r\n            const vagas = response.data\r\n            console.log(\"Segue o array chefe: \" + vagas)\r\n\r\n            return(\r\n                <>\r\n                 {vagas.map((vaga, index) => (\r\n                        <div key={index}>\r\n                        <div><img src=\"https://via.placeholder.com/50\" alt=\"\" /></div>\r\n                        <p>{format(new Date(vaga.data_pub), 'dd-MM-yyyy')}</p>\r\n                        <h1>{vaga.cargo}</h1>\r\n                        <span>{vaga.localidade}</span>\r\n                        </div>\r\n                     ))} \r\n        \r\n                    \r\n                </>\r\n            )\r\n\r\n        }\r\n        catch(error){\r\n            console.error('Erro ao buscar vagas:', error)\r\n        }\r\n    }\r\n\r\n    fetchVagas()\r\n}, [])\r\n\r\n\r\n}\r\n\r\nexport default Jobs"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,MAAM,QAAQ,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGnBV,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAW;MAC1B,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,wBAAwB,CAAC;QAC1DC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;QAC1B,MAAMC,KAAK,GAAGL,QAAQ,CAACI,IAAI;QAC3BF,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGE,KAAK,CAAC;QAE5C,oBACIX,OAAA,CAAAE,SAAA;UAAAU,QAAA,EACED,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAChBf,OAAA;YAAAY,QAAA,gBACAZ,OAAA;cAAAY,QAAA,eAAKZ,OAAA;gBAAKgB,GAAG,EAAC,gCAAgC;gBAACC,GAAG,EAAC;cAAE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC9DrB,OAAA;cAAAY,QAAA,EAAId,MAAM,CAAC,IAAIwB,IAAI,CAACR,IAAI,CAACS,QAAQ,CAAC,EAAE,YAAY;YAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtDrB,OAAA;cAAAY,QAAA,EAAKE,IAAI,CAACU;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBrB,OAAA;cAAAY,QAAA,EAAOE,IAAI,CAACW;YAAU;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAJpBN,KAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKV,CACP;QAAC,gBAGL,CAAC;MAGX,CAAC,CACD,OAAMK,KAAK,EAAC;QACRlB,OAAO,CAACkB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDrB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;AAGN,CAAC;AAAAD,EAAA,CApCKD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAsCV,eAAeA,IAAI;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}