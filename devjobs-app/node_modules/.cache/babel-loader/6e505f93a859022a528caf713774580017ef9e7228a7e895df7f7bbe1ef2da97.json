{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madru\\\\OneDrive\\\\Documentos\\\\DevJobs App\\\\devjobs-app\\\\src\\\\containers\\\\Home\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format, setWeek } from 'date-fns';\nimport Card from 'react-bootstrap/Card';\nimport 'Lista';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [vagas, setVagas] = useState([]);\n  const fetchVagas = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/');\n      setVagas(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar vagas:', error);\n    }\n  };\n  useEffect(() => {\n    fetchVagas();\n  }, []);\n\n  // useEffect(() => {\n\n  //   const fetchRequisitos = async(idreq) => {\n  //     try{ \n  //         const response = await axios.get(`http://localhost:3000/requisitos/:id${idreq}`)\n  //         setRequisitos(response.data)\n  //         console.log(response.data)\n\n  //     } catch(error){\n  //         console.error('Erro ao buscar requisitos:', error)\n  //         throw error;\n  //     }\n\n  //    }\n\n  //    vagas.map((vaga, index) => (\n  //     fetchRequisitos(index)\n  //   ))\n\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: vagas.map((vaga, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '22rem',\n        height: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/50\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 34\n          }, this), \" \", vaga.nome_empresa]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", vaga.cargo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [format(new Date(vaga.data_pub), 'dd-MM-yyyy'), \" - \", vaga.localidade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_s(Jobs, \"+0xV4kZHcLwLEdIHFfclKlysi1c=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","setWeek","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","vagas","setVagas","fetchVagas","response","get","data","error","console","children","map","vaga","index","style","width","height","Body","Title","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","nome_empresa","cargo","Subtitle","className","Date","data_pub","localidade","Text","_c","$RefreshReg$"],"sources":["C:/Users/madru/OneDrive/Documentos/DevJobs App/devjobs-app/src/containers/Home/Jobs.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { format, setWeek } from 'date-fns';\r\nimport Card from 'react-bootstrap/Card';\r\nimport 'Lista'\r\n\r\nconst Jobs = () => {\r\n\r\nconst [vagas, setVagas] = useState([])\r\n\r\n\r\n\r\n    const fetchVagas = async () =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:3000/')\r\n            setVagas(response.data)\r\n        }\r\n        catch(error){\r\n            console.error('Erro ao buscar vagas:', error)\r\n        }\r\n    }\r\n\r\nuseEffect(() => {\r\n\r\n\r\n    fetchVagas()\r\n}, [])\r\n\r\n\r\n\r\n// useEffect(() => {\r\n\r\n//   const fetchRequisitos = async(idreq) => {\r\n//     try{ \r\n//         const response = await axios.get(`http://localhost:3000/requisitos/:id${idreq}`)\r\n//         setRequisitos(response.data)\r\n//         console.log(response.data)\r\n        \r\n//     } catch(error){\r\n//         console.error('Erro ao buscar requisitos:', error)\r\n//         throw error;\r\n//     }\r\n    \r\n//    }\r\n  \r\n\r\n//    vagas.map((vaga, index) => (\r\n//     fetchRequisitos(index)\r\n//   ))\r\n\r\n// }, [])\r\n\r\n\r\n    return(\r\n        <>\r\n             {\r\n             \r\n             vagas.map((vaga, index) => (\r\n\r\n              \r\n\r\n                <Card style={{ width: '22rem', height: '18rem'}} key={index}>\r\n                <Card.Body>\r\n                    <Card.Title> <img src=\"https://via.placeholder.com/50\" alt=\"\" /> {vaga.nome_empresa}</Card.Title>\r\n                    <Card.Title> {vaga.cargo}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{format(new Date(vaga.data_pub), 'dd-MM-yyyy')} - {vaga.localidade}</Card.Subtitle>\r\n                    <Card.Text>\r\n                                            \r\n                        </Card.Text> \r\n                    \r\n                </Card.Body>\r\n                </Card>\r\n                \r\n                \r\n             ))}\r\n                \r\n                \r\n             \r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Jobs"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,OAAO,QAAQ,UAAU;AAC1C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEd,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAIlC,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAW;IAC1B,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,wBAAwB,CAAC;MAC1DH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CACD,OAAMC,KAAK,EAAC;MACRC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAELlB,SAAS,CAAC,MAAM;IAGZc,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAIN;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAGA;EACA;EACA;;EAEA;;EAGI,oBACIP,OAAA,CAAAE,SAAA;IAAAW,QAAA,EAGKR,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAInBhB,OAAA,CAACF,IAAI;MAACmB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAN,QAAA,eAChDb,OAAA,CAACF,IAAI,CAACsB,IAAI;QAAAP,QAAA,gBACNb,OAAA,CAACF,IAAI,CAACuB,KAAK;UAAAR,QAAA,GAAC,GAAC,eAAAb,OAAA;YAAKsB,GAAG,EAAC,gCAAgC;YAACC,GAAG,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,EAACZ,IAAI,CAACa,YAAY;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACjG3B,OAAA,CAACF,IAAI,CAACuB,KAAK;UAAAR,QAAA,GAAC,GAAC,EAACE,IAAI,CAACc,KAAK;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACtC3B,OAAA,CAACF,IAAI,CAACgC,QAAQ;UAACC,SAAS,EAAC,iBAAiB;UAAAlB,QAAA,GAAEjB,MAAM,CAAC,IAAIoC,IAAI,CAACjB,IAAI,CAACkB,QAAQ,CAAC,EAAE,YAAY,CAAC,EAAC,KAAG,EAAClB,IAAI,CAACmB,UAAU;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC,eAC9H3B,OAAA,CAACF,IAAI,CAACqC,IAAI;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET;IAAC,GAT0CX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUrD,CAGR;EAAC,gBAML,CAAC;AAEX,CAAC;AAAAvB,EAAA,CA5EKD,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AA8EV,eAAeA,IAAI;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}