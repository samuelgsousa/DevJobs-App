{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madru\\\\OneDrive\\\\Documentos\\\\DevJobs App\\\\devjobs-app\\\\src\\\\containers\\\\Home\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [vagas, setVagas] = useState([]);\n  const [carregando, setCarregando] = useState(true);\n  useEffect(() => {\n    const fetchVagas = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/');\n        setVagas(response.data);\n        setCarregando(false);\n      } catch (error) {\n        console.error('Erro ao buscar vagas:', error);\n      }\n    };\n    fetchVagas();\n  }, []);\n  if (carregando) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: vagas.map((vaga, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://via.placeholder.com/50\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: format(new Date(vaga.data_pub), 'dd-MM-yyyy')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: vaga.cargo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: vaga.localidade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_s(Jobs, \"2IC7LGpfThxikqA3amC5OdLn8bM=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","vagas","setVagas","carregando","setCarregando","fetchVagas","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","vaga","index","src","alt","Date","data_pub","cargo","localidade","_c","$RefreshReg$"],"sources":["C:/Users/madru/OneDrive/Documentos/DevJobs App/devjobs-app/src/containers/Home/Jobs.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { format } from 'date-fns'\r\n\r\n\r\nconst Jobs = () => {\r\n    const [vagas, setVagas] = useState([]);\r\n    const [carregando, setCarregando] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchVagas = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3000/');\r\n                setVagas(response.data);\r\n                setCarregando(false);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar vagas:', error);\r\n            }\r\n        };\r\n\r\n        fetchVagas();\r\n    }, []);\r\n\r\n    if (carregando) {\r\n        return <p>Carregando...</p>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {vagas.map((vaga, index) => (\r\n                <div key={index}>\r\n                    <div><img src=\"https://via.placeholder.com/50\" alt=\"\" /></div>\r\n                    <p>{format(new Date(vaga.data_pub), 'dd-MM-yyyy')}</p>\r\n                    <h1>{vaga.cargo}</h1>\r\n                    <span>{vaga.localidade}</span>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\nexport default Jobs"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZ,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,wBAAwB,CAAC;QAC1DL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;QACvBJ,aAAa,CAAC,KAAK,CAAC;MACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,UAAU,EAAE;IACZ,oBAAOP,OAAA;MAAAe,QAAA,EAAG;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC/B;EAEA,oBACInB,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACKV,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBtB,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAAe,QAAA,eAAKf,OAAA;UAAKuB,GAAG,EAAC,gCAAgC;UAACC,GAAG,EAAC;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9DnB,OAAA;QAAAe,QAAA,EAAIjB,MAAM,CAAC,IAAI2B,IAAI,CAACJ,IAAI,CAACK,QAAQ,CAAC,EAAE,YAAY;MAAC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDnB,OAAA;QAAAe,QAAA,EAAKM,IAAI,CAACM;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBnB,OAAA;QAAAe,QAAA,EAAOM,IAAI,CAACO;MAAU;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAJxBG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACR;EAAC,gBACJ,CAAC;AAEX,CAAC;AAACf,EAAA,CAlCID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAmCV,eAAeA,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}