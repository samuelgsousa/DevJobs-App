{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madru\\\\OneDrive\\\\Documentos\\\\DevJobs App\\\\devjobs-app\\\\src\\\\containers\\\\Home\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [vagas, setVagas] = useState([]);\n  const [requisitos, setRequisitos] = useState([]);\n  useEffect(() => {\n    const fetchVagas = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/');\n        setVagas(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar vagas:', error);\n      }\n    };\n    fetchVagas();\n  }, []);\n  useEffect(() => {\n    const fetchRequisitos = async idreq => {\n      try {\n        const response = await axios.get(`http://localhost:3000/requisitos/:id${idreq}`);\n        return response.data;\n      } catch (error) {\n        console.error('Erro ao buscar requisitos:', error);\n        throw error;\n      }\n    };\n    const loadRequisitos = async () => {\n      const promises = vagas.map(async (vaga, index) => {\n        const requisitosVaga = await fetchRequisitos(index);\n        return requisitosVaga;\n      });\n      const requisitosPorVaga = await Promise.all(promises);\n      setRequisitos(requisitosPorVaga);\n    };\n    loadRequisitos();\n  }, [vagas]);\n  const separarRequisitos = async index => {\n    requisitos[index].forEach(req => {\n      console.log(req.vaga_id);\n      console.log(index);\n      if (req.vaga_id === index) {\n        console.log('Olha é: ' + req.vaga_id);\n      } else {\n        console.log('esse num é');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: vagas.map((vaga, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '22rem',\n        height: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [' ', /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/50\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), \" \", vaga.nome_empresa]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", vaga.cargo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [format(new Date(vaga.data_pub), 'dd-MM-yyyy'), \" - \", vaga.localidade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: separarRequisitos(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(Jobs, \"eEP0slgWcWMjMyhRQbLrMGDCLv4=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","vagas","setVagas","requisitos","setRequisitos","fetchVagas","response","get","data","error","console","fetchRequisitos","idreq","loadRequisitos","promises","map","vaga","index","requisitosVaga","requisitosPorVaga","Promise","all","separarRequisitos","forEach","req","log","vaga_id","children","style","width","height","Body","Title","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","nome_empresa","cargo","Subtitle","className","Date","data_pub","localidade","Text","_c","$RefreshReg$"],"sources":["C:/Users/madru/OneDrive/Documentos/DevJobs App/devjobs-app/src/containers/Home/Jobs.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Jobs = () => {\r\n  const [vagas, setVagas] = useState([]);\r\n  const [requisitos, setRequisitos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchVagas = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/');\r\n        setVagas(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar vagas:', error);\r\n      }\r\n    };\r\n\r\n    fetchVagas();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchRequisitos = async (idreq) => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/requisitos/:id${idreq}`);\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Erro ao buscar requisitos:', error);\r\n        throw error;\r\n      }\r\n    };\r\n\r\n    const loadRequisitos = async () => {\r\n      const promises = vagas.map(async (vaga, index) => {\r\n        const requisitosVaga = await fetchRequisitos(index);\r\n        return requisitosVaga;\r\n      });\r\n      const requisitosPorVaga = await Promise.all(promises);\r\n      setRequisitos(requisitosPorVaga);\r\n    };\r\n\r\n    loadRequisitos();\r\n  }, [vagas]);\r\n\r\n  const separarRequisitos = async (index) => {\r\n    requisitos[index].forEach((req) => {\r\n      console.log(req.vaga_id);\r\n      console.log(index);\r\n\r\n      if (req.vaga_id === index) {\r\n        console.log('Olha é: ' + req.vaga_id);\r\n      } else {\r\n        console.log('esse num é');\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {vagas.map((vaga, index) => (\r\n        <Card style={{ width: '22rem', height: '18rem' }} key={index}>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {' '}\r\n              <img src=\"https://via.placeholder.com/50\" alt=\"\" /> {vaga.nome_empresa}\r\n            </Card.Title>\r\n            <Card.Title> {vaga.cargo}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              {format(new Date(vaga.data_pub), 'dd-MM-yyyy')} - {vaga.localidade}\r\n            </Card.Subtitle>\r\n            <Card.Text>\r\n              <ul>{separarRequisitos(index)}</ul>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}