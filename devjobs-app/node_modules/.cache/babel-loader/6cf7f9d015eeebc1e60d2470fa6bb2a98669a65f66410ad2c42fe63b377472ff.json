{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madru\\\\OneDrive\\\\Documentos\\\\DevJobs App\\\\devjobs-app\\\\src\\\\containers\\\\Home\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [vagas, setVagas] = useState([]);\n  useEffect(() => {\n    const fetchVagas = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/');\n        setVagas(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar vagas:', error);\n      }\n    };\n    fetchVagas();\n  }, []);\n  const vagaRequisitos = async idreq => {\n    try {\n      const response = await axios.get(`http://localhost:3000/requisitos/:id${idreq}`);\n      return response.data.map(requisito => requisito.requisito); // Alteração aqui\n    } catch (error) {\n      console.error('Erro ao buscar requisitos:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: vagas.map((vaga, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '22rem',\n        height: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/50\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), \" \", vaga.nome_empresa]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: vaga.cargo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [format(new Date(vaga.data_pub), 'dd-MM-yyyy'), \" - \", vaga.localidade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: vagaRequisitos(vaga.id).map((requisito, index) =>\n            /*#__PURE__*/\n            // Alteração aqui\n            _jsxDEV(\"li\", {\n              children: requisito\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n_s(Jobs, \"+0xV4kZHcLwLEdIHFfclKlysi1c=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["Jobs","_s","vagas","setVagas","useState","useEffect","fetchVagas","response","axios","get","data","error","console","vagaRequisitos","idreq","map","requisito","_jsxDEV","_Fragment","children","vaga","index","Card","style","width","height","Body","Title","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","nome_empresa","cargo","Subtitle","className","format","Date","data_pub","localidade","Text","id","_c","$RefreshReg$"],"sources":["C:/Users/madru/OneDrive/Documentos/DevJobs App/devjobs-app/src/containers/Home/Jobs.jsx"],"sourcesContent":["const Jobs = () => {\r\n    const [vagas, setVagas] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchVagas = async () => {\r\n        try {\r\n          const response = await axios.get('http://localhost:3000/');\r\n          setVagas(response.data);\r\n        } catch (error) {\r\n          console.error('Erro ao buscar vagas:', error);\r\n        }\r\n      };\r\n  \r\n      fetchVagas();\r\n    }, []);\r\n  \r\n    const vagaRequisitos = async (idreq) => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/requisitos/:id${idreq}`);\r\n        return response.data.map(requisito => requisito.requisito); // Alteração aqui\r\n      } catch (error) {\r\n        console.error('Erro ao buscar requisitos:', error);\r\n        throw error;\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        {vagas.map((vaga, index) => (\r\n          <Card style={{ width: '22rem', height: '18rem'}} key={index}>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                <img src=\"https://via.placeholder.com/50\" alt=\"\" /> {vaga.nome_empresa}\r\n              </Card.Title>\r\n              <Card.Title>{vaga.cargo}</Card.Title>\r\n              <Card.Subtitle className=\"mb-2 text-muted\">\r\n                {format(new Date(vaga.data_pub), 'dd-MM-yyyy')} - {vaga.localidade}\r\n              </Card.Subtitle>\r\n              <Card.Text>\r\n                <ul>\r\n                  {vagaRequisitos(vaga.id).map((requisito, index) => ( // Alteração aqui\r\n                    <li key={index}>{requisito}</li>\r\n                  ))}\r\n                </ul>\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Jobs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}