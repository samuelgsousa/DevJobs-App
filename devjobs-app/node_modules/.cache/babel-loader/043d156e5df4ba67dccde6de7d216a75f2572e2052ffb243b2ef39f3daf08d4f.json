{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madru\\\\OneDrive\\\\Documentos\\\\DevJobs App\\\\devjobs-app\\\\src\\\\containers\\\\Home\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [vagas, setVagas] = useState([]);\n  const [requisitosPorVaga, setRequisitosPorVaga] = useState({});\n  useEffect(() => {\n    const fetchVagas = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/');\n        setVagas(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar vagas:', error);\n      }\n    };\n    fetchVagas();\n  }, []);\n  useEffect(() => {\n    const fetchRequisitos = async id => {\n      try {\n        const response = await axios.get(`http://localhost:3000/requisitos/:id${id}`);\n        setRequisitosPorVaga(prevRequisitos => ({\n          ...prevRequisitos,\n          [id]: response.data // Armazenar requisitos usando o ID da vaga como chave\n        }));\n      } catch (error) {\n        console.error('Erro ao buscar requisitos:', error);\n      }\n    };\n    vagas.forEach(vaga => {\n      fetchRequisitos(vaga.id);\n    });\n  }, [vagas]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: vagas.map((vaga, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '22rem',\n        height: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [' ', /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/50\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), \" \", vaga.nome_empresa]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", vaga.cargo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [format(new Date(vaga.data_pub), 'dd-MM-yyyy'), \" - \", vaga.localidade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: requisitosPorVaga[vaga.id] && requisitosPorVaga[vaga.id].map((requisito, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: requisito\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(Jobs, \"Q3mBpoII9/Wtgl7gPiuMutG6XBM=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","vagas","setVagas","requisitosPorVaga","setRequisitosPorVaga","fetchVagas","response","get","data","error","console","fetchRequisitos","id","prevRequisitos","forEach","vaga","children","map","index","style","width","height","Body","Title","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","nome_empresa","cargo","Subtitle","className","Date","data_pub","localidade","Text","requisito","idx","_c","$RefreshReg$"],"sources":["C:/Users/madru/OneDrive/Documentos/DevJobs App/devjobs-app/src/containers/Home/Jobs.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Jobs = () => {\r\n  const [vagas, setVagas] = useState([]);\r\n  const [requisitosPorVaga, setRequisitosPorVaga] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchVagas = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/');\r\n        setVagas(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar vagas:', error);\r\n      }\r\n    };\r\n\r\n    fetchVagas();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchRequisitos = async (id) => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/requisitos/:id${id}`);\r\n        setRequisitosPorVaga((prevRequisitos) => ({\r\n          ...prevRequisitos,\r\n          [id]: response.data, // Armazenar requisitos usando o ID da vaga como chave\r\n        }));\r\n      } catch (error) {\r\n        console.error('Erro ao buscar requisitos:', error);\r\n      }\r\n    };\r\n\r\n    vagas.forEach((vaga) => {\r\n      fetchRequisitos(vaga.id);\r\n    });\r\n  }, [vagas]);\r\n\r\n  return (\r\n    <>\r\n      {vagas.map((vaga, index) => (\r\n        <Card style={{ width: '22rem', height: '18rem' }} key={index}>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {' '}\r\n              <img src=\"https://via.placeholder.com/50\" alt=\"\" /> {vaga.nome_empresa}\r\n            </Card.Title>\r\n            <Card.Title> {vaga.cargo}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              {format(new Date(vaga.data_pub), 'dd-MM-yyyy')} - {vaga.localidade}\r\n            </Card.Subtitle>\r\n            <Card.Text>\r\n              <ul>\r\n                {requisitosPorVaga[vaga.id] &&\r\n                  requisitosPorVaga[vaga.id].map((requisito, idx) => (\r\n                    <li key={idx}>{requisito}</li>\r\n                  ))}\r\n              </ul>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}