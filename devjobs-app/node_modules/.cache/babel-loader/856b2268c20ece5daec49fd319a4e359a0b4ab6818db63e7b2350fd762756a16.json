{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madru\\\\OneDrive\\\\Documentos\\\\DevJobs App\\\\devjobs-app\\\\src\\\\containers\\\\Home\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport Card from 'react-bootstrap/Card';\nimport ReadMoreReact from 'read-more-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [vagas, setVagas] = useState([]);\n  useEffect(() => {\n    const fetchVagas = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/');\n        setVagas(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar vagas:', error);\n      }\n    };\n    fetchVagas();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: vagas.map((vaga, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '22rem',\n        height: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/50\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 34\n          }, this), \" \", vaga.nome_empresa]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", vaga.cargo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [format(new Date(vaga.data_pub), 'dd-MM-yyyy'), \" - \", vaga.localidade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(ReadMoreReact, {\n            text: vaga.descricao,\n            min: 80,\n            ideal: 100,\n            max: 20,\n            readMoreText: 'teste'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n          href: \"#\",\n          children: \"Abrir Vaga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n_s(Jobs, \"+0xV4kZHcLwLEdIHFfclKlysi1c=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","Card","ReadMoreReact","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","vagas","setVagas","fetchVagas","response","get","data","error","console","children","map","vaga","index","style","width","height","Body","Title","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","nome_empresa","cargo","Subtitle","className","Date","data_pub","localidade","Text","text","descricao","min","ideal","max","readMoreText","Link","href","_c","$RefreshReg$"],"sources":["C:/Users/madru/OneDrive/Documentos/DevJobs App/devjobs-app/src/containers/Home/Jobs.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { format } from 'date-fns'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ReadMoreReact from 'read-more-react';\r\n\r\nconst Jobs = () => {\r\n\r\nconst [vagas, setVagas] = useState([])\r\n\r\nuseEffect(() => {\r\n    const fetchVagas = async () =>{\r\n        try{\r\n            const response = await axios.get('http://localhost:3000/')\r\n            setVagas(response.data)\r\n        }\r\n        catch(error){\r\n            console.error('Erro ao buscar vagas:', error)\r\n        }\r\n    }\r\n\r\n    fetchVagas()\r\n}, [])\r\n\r\n    return(\r\n        <>\r\n             {\r\n             \r\n             vagas.map((vaga, index) => (\r\n\r\n                <Card style={{ width: '22rem', height: '18rem'}} key={index}>\r\n                <Card.Body>\r\n                    <Card.Title> <img src=\"https://via.placeholder.com/50\" alt=\"\" /> {vaga.nome_empresa}</Card.Title>\r\n                    <Card.Title> {vaga.cargo}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{format(new Date(vaga.data_pub), 'dd-MM-yyyy')} - {vaga.localidade}</Card.Subtitle>\r\n                    <Card.Text>\r\n                        <ReadMoreReact text={vaga.descricao} \r\n                        min={80}\r\n                        ideal={100}\r\n                        max={20}\r\n                        readMoreText={'teste'}\r\n                        />\r\n                        \r\n                        \r\n                        </Card.Text> \r\n                    <Card.Link href=\"#\">Abrir Vaga</Card.Link>\r\n                </Card.Body>\r\n                </Card>\r\n                \r\n                \r\n             ))}\r\n                \r\n                \r\n             \r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Jobs"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}