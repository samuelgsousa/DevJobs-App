{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\madru\\\\OneDrive\\\\Documentos\\\\DevJobs App\\\\devjobs-app\\\\src\\\\containers\\\\Home\\\\Jobs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { format } from 'date-fns';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Jobs = () => {\n  _s();\n  const [vagas, setVagas] = useState([]);\n  const [requisitosPorVaga, setRequisitosPorVaga] = useState([]);\n  useEffect(() => {\n    const fetchVagas = async () => {\n      try {\n        const response = await axios.get('http://localhost:3000/');\n        setVagas(response.data);\n      } catch (error) {\n        console.error('Erro ao buscar vagas:', error);\n      }\n    };\n    fetchVagas();\n  }, []);\n  useEffect(() => {\n    const fetchRequisitos = async idreq => {\n      try {\n        const response = await axios.get(`http://localhost:3000/requisitos/:id${idreq}`);\n        setRequisitosPorVaga(prevRequisitos => [...prevRequisitos, response.data]);\n      } catch (error) {\n        console.error('Erro ao buscar requisitos:', error);\n      }\n    };\n    vagas.forEach((vaga, index) => {\n      fetchRequisitos(vaga.id);\n    });\n  }, [vagas]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: vagas.map((vaga, index) => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '22rem',\n        height: '18rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [' ', /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/50\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), \" \", vaga.nome_empresa]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: [\" \", vaga.cargo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [format(new Date(vaga.data_pub), 'dd-MM-yyyy'), \" - \", vaga.localidade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: requisitosPorVaga[index] && requisitosPorVaga[index].map((requisito, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: requisito\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(Jobs, \"Q368FsDlg53cD+svqB7VU5bGPBA=\");\n_c = Jobs;\nexport default Jobs;\nvar _c;\n$RefreshReg$(_c, \"Jobs\");","map":{"version":3,"names":["React","useEffect","useState","axios","format","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Jobs","_s","vagas","setVagas","requisitosPorVaga","setRequisitosPorVaga","fetchVagas","response","get","data","error","console","fetchRequisitos","idreq","prevRequisitos","forEach","vaga","index","id","children","map","style","width","height","Body","Title","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","nome_empresa","cargo","Subtitle","className","Date","data_pub","localidade","Text","requisito","idx","_c","$RefreshReg$"],"sources":["C:/Users/madru/OneDrive/Documentos/DevJobs App/devjobs-app/src/containers/Home/Jobs.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { format } from 'date-fns';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nconst Jobs = () => {\r\n  const [vagas, setVagas] = useState([]);\r\n  const [requisitosPorVaga, setRequisitosPorVaga] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchVagas = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/');\r\n        setVagas(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar vagas:', error);\r\n      }\r\n    };\r\n\r\n    fetchVagas();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchRequisitos = async (idreq) => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:3000/requisitos/:id${idreq}`);\r\n        setRequisitosPorVaga((prevRequisitos) => [...prevRequisitos, response.data]);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar requisitos:', error);\r\n      }\r\n    };\r\n\r\n    vagas.forEach((vaga, index) => {\r\n      fetchRequisitos(vaga.id);\r\n    });\r\n  }, [vagas]);\r\n\r\n  return (\r\n    <>\r\n      {vagas.map((vaga, index) => (\r\n        <Card style={{ width: '22rem', height: '18rem' }} key={index}>\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {' '}\r\n              <img src=\"https://via.placeholder.com/50\" alt=\"\" /> {vaga.nome_empresa}\r\n            </Card.Title>\r\n            <Card.Title> {vaga.cargo}</Card.Title>\r\n            <Card.Subtitle className=\"mb-2 text-muted\">\r\n              {format(new Date(vaga.data_pub), 'dd-MM-yyyy')} - {vaga.localidade}\r\n            </Card.Subtitle>\r\n            <Card.Text>\r\n              <ul>\r\n                {requisitosPorVaga[index] &&\r\n                  requisitosPorVaga[index].map((requisito, idx) => (\r\n                    <li key={idx}>{requisito}</li>\r\n                  ))}\r\n              </ul>\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Jobs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}